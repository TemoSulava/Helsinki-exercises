{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","console","log","noteService","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LAgBeA,EAdF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OAEI,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCTtCK,EAAU,aAkBD,GAAEC,OAhBF,WAEb,OADgBC,IAAMC,IAAIH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,SAcpBC,OAXV,SAAAC,GAEb,OADgBN,IAAMO,KAAKT,EAASQ,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SASVI,OANlB,SAACC,EAAIH,GAEnB,OADgBN,IAAMU,IAAN,UAAaZ,EAAb,YAAwBW,GAAMH,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCD3BO,G,MAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKjB,UAAU,QAAf,SACGiB,MCUQC,EAjBA,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,2GCLNC,QAAQC,IAAIC,GAEZ,IA6EeC,EA7EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAOhBC,qBAAU,WACRX,EAAYrB,SAASG,MAAK,SAAC8B,GAAD,OAAkBR,EAASQ,QACpD,IAEH,IAkBMC,EAAcN,EAAUJ,EAAQA,EAAMW,QAAO,SAAC3C,GAAD,OAAUA,EAAKG,aAqBlE,OACE,gCACE,uCACA,cAAC,EAAD,CAAckB,QAASiB,IACvB,8BACE,yBAAQhC,QAAS,kBAAM+B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGM,EAAYE,KAAI,SAAC5C,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAjCD,SAACiB,GAC1B,IAAMlB,EAAOgC,EAAMa,MAAK,SAACC,GAAD,OAAOA,EAAE5B,KAAOA,KAClC6B,EAAW,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAGhD0B,EACGZ,OAAOC,EAAI6B,GACXpC,MAAK,SAACqC,GACLf,EAASD,EAAMY,KAAI,SAAC5C,GAAD,OAAWA,EAAKkB,KAAOA,EAAKlB,EAAOgD,SAEvDC,OAAM,SAACC,GACNX,EAAgB,QAAD,OAASvC,EAAKK,QAAd,yCACf8C,YAAW,WACTZ,EAAgB,QACf,KACHN,EAASD,EAAMW,QAAO,SAACG,GAAD,OAAOA,EAAE5B,KAAOA,SAkBVkC,CAAmBpD,EAAKkB,MAF3ClB,EAAKkB,SAMhB,uBAAMmC,SAzDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBnD,QAAS6B,EACTuB,MAAM,IAAIC,MAAOC,cACjBxD,UAAWyD,KAAKC,SAAW,IAG7BhC,EAAYf,OAAO0C,GAAY7C,MAAK,SAACqC,GACnCf,EAASD,EAAM8B,OAAOd,IACtBb,EAAW,QA+CX,UACE,uBAAO4B,MAAO7B,EAAS8B,SA5CJ,SAACV,GACxBnB,EAAWmB,EAAMW,OAAOF,UA4CpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,QC9ENC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bf228a05.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n\n  const label = note.important ? 'make not important' : 'make important';\n\n  return (\n    \n      <li className=\"note\">\n        {note.content}\n        <button onClick={toggleImportance}>{label}</button>\n      </li>\n    \n  );\n}\n\nexport default Note","import axios from 'axios';\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data)\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n return request.then(response => response.data);\r\n};\r\n\r\n\r\nexport default { getAll, create, update };","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        Note app, Department of Computer Science, University of Helsinki 2021\r\n      </em>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport './index.css';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\n\nconsole.log(noteService);\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('some error happened...');\n\n  //axios call for fetching data from the json server\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => setNotes(initialNotes));\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    };\n    //axios call for adding the note to the notes url\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    //Axios call for updating the notes\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(`Note ${note.content} was already removed from the server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}