{"version":3,"sources":["Filter.js","AddPeople.js","ContactList.js","services/ContactDatabase.js","Notification.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","AddPeople","createPerson","handleChange","newNumber","handleNumberChange","newName","onSubmit","type","ContactList","filterLength","filterName","displayNames","className","map","p","name","number","id","baseUrl","axios","get","then","response","data","personObject","post","delete","Notification","message","style","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","textStyle","setTextStyle","successMessage","errorMessage","useEffect","contactServices","returnedInfo","filter","person","toLowerCase","includes","length","onClick","removeContact","returnedPersons","catch","error","e","target","preventDefault","some","window","confirm","find","returnedPerson","concat","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAMeA,EAJA,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBAC3B,OAAO,uBAAOC,MAAOF,EAAWG,SAAUF,KCsB7BG,EAvBG,SAAC,GAMZ,IALLC,EAKI,EALJA,aACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,QAEA,OACE,uBAAMC,SAAUL,EAAhB,UACE,yCACQ,uBAAOM,KAAK,OAAOT,MAAOO,EAASN,SAAUG,OAErD,0CACU,IACR,uBAAOK,KAAK,SAAST,MAAOK,EAAWJ,SAAUK,OAEnD,8BACE,wBAAQG,KAAK,SAAb,uBCGOC,EAlBK,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC/C,OACE,mCACGF,EAAe,EACd,oBAAIG,UAAU,gBAAd,SACGF,EAAWG,KAAI,SAAAC,GAAC,OACf,+BACGA,EAAEC,KADL,IACW,+BAAOD,EAAEE,WADXF,EAAEG,SAMf,oBAAIL,UAAU,aAAd,SAA4BD,O,gBCf9BO,EAAU,eAiBD,EAfA,WAEX,OADcC,IAAMC,IAAIF,GACTG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACC,GAEZ,OADcL,IAAMM,KAAKP,EAASM,GACnBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAAAN,GAEX,OADcE,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BD,IACzBI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCD/BI,EAZM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAG/B,OAAgB,OAAZD,EACK,KAIP,qBAAKC,MAAOA,EAAZ,SAAoBD,KCmKTE,EArKH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTC,EADS,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAET1B,EAFS,KAEA6B,EAFA,OAGkBH,qBAHlB,mBAGT5B,EAHS,KAGEgC,EAHF,OAIkBJ,mBAAS,IAJ3B,mBAITnC,EAJS,KAIEwC,EAJF,OAKcL,mBAAS,sCALvB,mBAKTH,EALS,KAKAS,EALA,OAMkBN,mBAAS,CACzCO,MAAO,OACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,KAbA,mBAMTC,EANS,KAMEC,EANF,KAgBVC,EAAiB,CACrBT,MAAO,QACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAGVI,EAAe,CACnBV,MAAO,MACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAIhBK,qBAAU,WACRC,IAEG7B,MAAK,SAAA8B,GAAY,OAAIlB,EAAWkB,QAClC,IAGH,IAAMzC,EAAasB,EAAQoB,QAAO,SAACC,GAAD,OAChCA,EAAOtC,KAAKuC,cAAcC,SAAS3D,EAAU0D,kBAGzC7C,EAAeb,EAAU4D,OAGzB7C,EAAeqB,EAAQnB,KAAI,SAAAwC,GAAM,OACrC,+BACGA,EAAOtC,KACR,+BAAOsC,EAAOrC,SACd,+BAAM,wBAAQyC,QAAS,kBAAMC,EAAcL,EAAOpC,KAA5C,wBAHCoC,EAAOpC,OAQZyC,EAAgB,SAACzC,GACrBiC,EACUjC,GACPI,MAAK,SAACsC,GAAD,OACJ1B,EAAWD,EAAQoB,QAAO,SAACC,GAAD,OAAYA,EAAOpC,KAAOA,SAErD2C,OAAM,SAACC,GACNxB,EAAW,YAAD,OAAahC,EAAb,8BACVyC,EAAaE,OAgEnB,OACE,gCACE,2CACA,cAAC,EAAD,CAAcnB,MAAOgB,EAAWjB,QAASA,IACzC,8BACE,gDAEE,+BACE,cAAC,EAAD,CACEhC,UAAWA,EACXC,mBAjBe,SAACiE,GAC1B1B,EAAa0B,EAAEC,OAAOjE,iBAqBpB,4CACA,cAAC,EAAD,CACEG,aA5Ee,SAAC6D,GAEpB,GADAA,EAAEE,iBACEhC,EAAQiC,MAAK,SAACZ,GAAD,OAAYA,EAAOtC,OAASV,MAC3C,GACE6D,OAAOC,QAAP,UACK9D,EADL,2EAIkB2B,EAAQoC,MAAK,SAACf,GAAD,OAAYA,EAAOtC,OAASV,KAEzCU,UAUpBmC,EALsB,CACpBnC,KAAMV,EACNW,OAAQb,IAKPkB,MAAK,SAACgD,GAAD,OAAoBpC,EAAWD,EAAQsC,OAAOD,OACnDT,OAAM,SAAAC,GACLxB,EAAW,GAAD,OAAIwB,EAAMvC,SAASC,KAAKsC,QAClCf,EAAaE,MAGfuB,YAAW,WACTlC,EAAW,QAAD,OAAShC,EAAT,6CACVyC,EAAaC,KACZ,GACHwB,YAAW,WACTlC,EAAW,wCACV,KAGPH,EAAW,IACXC,EAAa,KAuCTjC,aAnCe,SAAC4D,GACpB5B,EAAW4B,EAAEC,OAAOjE,QAmChBK,UAAWA,EACXC,mBAhCqB,SAAC0D,GAC1B3B,EAAa2B,EAAEC,OAAOjE,QAgClBO,QAASA,IAEX,yCACA,cAAC,EAAD,CACEI,aAAcA,EACdE,aAAcA,EACdD,WAAYA,Q,MCjKpB8D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.31a3a5b8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ newFilter, handleFilterChange }) => {\r\n  return <input value={newFilter} onChange={handleFilterChange} />;\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst AddPeople = ({\r\n  createPerson,\r\n  handleChange,\r\n  newNumber,\r\n  handleNumberChange,\r\n  newName,\r\n}) => {\r\n  return (\r\n    <form onSubmit={createPerson}>\r\n      <div>\r\n        name: <input type='text' value={newName} onChange={handleChange} />\r\n      </div>\r\n      <div>\r\n        number:{\" \"}\r\n        <input type=\"number\" value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddPeople;\r\n","import React from \"react\";\r\n\r\n//This function conditionally displays the contact list, depending what is inputed into the search bar.\r\n\r\nconst ContactList = ({ filterLength, filterName, displayNames }) => {\r\n  return (\r\n    <>\r\n      {filterLength > 0 ? (\r\n        <ul className=\"filtered-list\">\r\n          {filterName.map(p => (\r\n            <li key={p.id}>\r\n              {p.name} <span>{p.number}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"list-style\">{displayNames}</ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst create = (personObject) => {\r\n  const request = axios.post(baseUrl, personObject)\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n    return  request.then(response => response.data);\r\n};\r\n\r\nexport default {getAll, create, remove};","import React from 'react';\r\n\r\nconst Notification = ({ message, style }) => {\r\n  \r\n\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div style={style}>{message}</div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./Filter\";\nimport AddPeople from \"./AddPeople\";\nimport ContactList from \"./ContactList\";\nimport contactServices from './services/ContactDatabase';\nimport Notification from './Notification';\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState();\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [message, setMessage] = useState('User addition status... pending...')\n  const [textStyle, setTextStyle] = useState({\n    color: \"grey\",\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  });\n \n  const successMessage = {\n    color: \"green\",\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n\n  const errorMessage = {\n    color: \"red\",\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n\n  //fetch contacts from the local database\n  useEffect(() => {\n    contactServices\n      .getAll()\n      .then(returnedInfo => setPersons(returnedInfo))\n  }, [])\n\n  //See if the search input includes the newFilter\n  const filterName = persons.filter((person) =>\n    person.name.toLowerCase().includes(newFilter.toLowerCase())\n  );\n  //check if the input is empty or has symbols filled in\n  const filterLength = newFilter.length;\n\n  //Entire phonebook list with names and numbers\n  const displayNames = persons.map(person => (\n    <li key={person.id}>\n      {person.name} \n      <span>{person.number}</span>\n      <span><button onClick={() => removeContact(person.id)}>Delete</button></span>\n    </li>\n  ));\n\n  //Remove an item from the list and display the rest of the items on the screen, by using the filter method.\n  const removeContact = (id) => {\n    contactServices\n      .remove(id)\n      .then((returnedPersons) =>\n        setPersons(persons.filter((person) => person.id !== id))\n      )\n      .catch((error) => {\n        setMessage(`The user ${newName} has already been deleted`);\n        setTextStyle(errorMessage);\n      });\n  };\n\n  //adds a new entity to the list\n  const createPerson = (e) => {\n    e.preventDefault();\n    if (persons.some((person) => person.name === newName)) {\n      if (\n        window.confirm(\n          `${newName} is already added to the phonebook, would you like to edit the number?`\n        )\n      ) {\n        const oldObject = persons.find((person) => person.name === newName);\n        const personsObject = {\n          name: oldObject.name,\n          number: newNumber,\n        };\n      }\n    } else {\n      const personsObject = {\n        name: newName,\n        number: newNumber,\n      };\n      \n      contactServices\n        .create(personsObject)\n        .then((returnedPerson) => setPersons(persons.concat(returnedPerson)))\n        .catch(error => {\n          setMessage(`${error.response.data.error}`)\n          setTextStyle(errorMessage);\n        })\n\n        setTimeout(() => {\n          setMessage(`User ${newName} has been successfully added to the list`)\n          setTextStyle(successMessage);\n        }, 0)\n        setTimeout(() => {\n          setMessage('User addition status... pending...')\n        }, 5000)\n    }\n    //reset fields after submition\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  //eventListener for controlling the name input\n  const handleChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  //controlling the number input\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  //controlling the search input\n  const handleFilterChange = (e) => {\n    setNewFilter(e.target.value);\n  };\n\n  \n \n\n  return (\n    <div>\n      <h2>PhoneBook</h2>\n      <Notification style={textStyle} message={message} />\n      <div>\n        <h2>\n          Search by name\n          <span>\n            <Filter\n              newFilter={newFilter}\n              handleFilterChange={handleFilterChange}\n            />\n          </span>\n        </h2>\n      </div>\n      <h3>Add people</h3>\n      <AddPeople\n        createPerson={createPerson}\n        handleChange={handleChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n      />\n      <h2>Numbers</h2>\n      <ContactList\n        filterLength={filterLength}\n        displayNames={displayNames}\n        filterName={filterName}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}